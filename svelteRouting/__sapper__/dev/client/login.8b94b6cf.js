import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as validate_slots, w as onMount, e as element, t as text, b as space, c as claim_element, f as children, j as claim_text, h as detach_dev, g as claim_space, k as attr_dev, l as add_location, n as insert_dev, o as append_dev, x as set_input_value, p as listen_dev, r as noop, y as run_all } from './client.194ab07c.js';
import { l as loginUser } from './users.service.386690b6.js';
import './env.8f6a26c3.js';

/* src\routes\login.svelte generated by Svelte v3.31.2 */
const file = "src\\routes\\login.svelte";

function create_fragment(ctx) {
	let div1;
	let div0;
	let a0;
	let t0;
	let t1;
	let h1;
	let t2;
	let t3;
	let hr0;
	let t4;
	let label0;
	let t5;
	let input0;
	let t6;
	let hr1;
	let t7;
	let label1;
	let t8;
	let input1;
	let t9;
	let hr2;
	let t10;
	let button;
	let t11;
	let t12;
	let hr3;
	let t13;
	let p;
	let t14;
	let a1;
	let t15;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			a0 = element("a");
			t0 = text("Rafiki's To Do List");
			t1 = space();
			h1 = element("h1");
			t2 = text("Welcome Back");
			t3 = space();
			hr0 = element("hr");
			t4 = space();
			label0 = element("label");
			t5 = text("Email Address\r\n\t\t\t");
			input0 = element("input");
			t6 = space();
			hr1 = element("hr");
			t7 = space();
			label1 = element("label");
			t8 = text("Password\r\n\t\t\t");
			input1 = element("input");
			t9 = space();
			hr2 = element("hr");
			t10 = space();
			button = element("button");
			t11 = text("Login");
			t12 = space();
			hr3 = element("hr");
			t13 = space();
			p = element("p");
			t14 = text("Don't have an account? ");
			a1 = element("a");
			t15 = text("Sign Up");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a0 = claim_element(div0_nodes, "A", { class: true, href: true });
			var a0_nodes = children(a0);
			t0 = claim_text(a0_nodes, "Rafiki's To Do List");
			a0_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t2 = claim_text(h1_nodes, "Welcome Back");
			h1_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			hr0 = claim_element(div0_nodes, "HR", {});
			t4 = claim_space(div0_nodes);
			label0 = claim_element(div0_nodes, "LABEL", { for: true, class: true });
			var label0_nodes = children(label0);
			t5 = claim_text(label0_nodes, "Email Address\r\n\t\t\t");

			input0 = claim_element(label0_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				name: true
			});

			label0_nodes.forEach(detach_dev);
			t6 = claim_space(div0_nodes);
			hr1 = claim_element(div0_nodes, "HR", { class: true });
			t7 = claim_space(div0_nodes);
			label1 = claim_element(div0_nodes, "LABEL", { for: true, class: true });
			var label1_nodes = children(label1);
			t8 = claim_text(label1_nodes, "Password\r\n\t\t\t");

			input1 = claim_element(label1_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				name: true
			});

			label1_nodes.forEach(detach_dev);
			t9 = claim_space(div0_nodes);
			hr2 = claim_element(div0_nodes, "HR", { class: true });
			t10 = claim_space(div0_nodes);
			button = claim_element(div0_nodes, "BUTTON", { type: true, id: true, class: true });
			var button_nodes = children(button);
			t11 = claim_text(button_nodes, "Login");
			button_nodes.forEach(detach_dev);
			t12 = claim_space(div0_nodes);
			hr3 = claim_element(div0_nodes, "HR", {});
			t13 = claim_space(div0_nodes);
			p = claim_element(div0_nodes, "P", {});
			var p_nodes = children(p);
			t14 = claim_text(p_nodes, "Don't have an account? ");
			a1 = claim_element(p_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			t15 = claim_text(a1_nodes, "Sign Up");
			a1_nodes.forEach(detach_dev);
			p_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a0, "class", "home svelte-ooms3n");
			attr_dev(a0, "href", ".");
			add_location(a0, file, 104, 2, 2120);
			attr_dev(h1, "class", "welcome svelte-ooms3n");
			add_location(h1, file, 105, 2, 2172);
			add_location(hr0, file, 107, 2, 2215);
			attr_dev(input0, "class", "form-control");
			attr_dev(input0, "id", "emailInput");
			attr_dev(input0, "type", "email");
			attr_dev(input0, "name", "loginEmail");
			add_location(input0, file, 110, 3, 2267);
			attr_dev(label0, "for", "loginEmail");
			attr_dev(label0, "class", "svelte-ooms3n");
			add_location(label0, file, 109, 2, 2225);
			attr_dev(hr1, "class", "noHr svelte-ooms3n");
			add_location(hr1, file, 113, 2, 2383);
			attr_dev(input1, "class", "form-control");
			attr_dev(input1, "id", "passwordInput");
			attr_dev(input1, "type", "password");
			attr_dev(input1, "name", "loginPassword");
			add_location(input1, file, 116, 3, 2446);
			attr_dev(label1, "for", "loginPassword");
			attr_dev(label1, "class", "svelte-ooms3n");
			add_location(label1, file, 115, 2, 2406);
			attr_dev(hr2, "class", "noHr svelte-ooms3n");
			add_location(hr2, file, 119, 2, 2574);
			attr_dev(button, "type", "button");
			attr_dev(button, "id", "loginButton");
			attr_dev(button, "class", "enterLogIn btn btn-dark svelte-ooms3n");
			add_location(button, file, 121, 2, 2597);
			add_location(hr3, file, 123, 2, 2709);
			attr_dev(a1, "href", "signUp");
			attr_dev(a1, "class", "signUpLink svelte-ooms3n");
			add_location(a1, file, 125, 28, 2745);
			add_location(p, file, 125, 2, 2719);
			attr_dev(div0, "class", "list-content svelte-ooms3n");
			add_location(div0, file, 102, 1, 2088);
			attr_dev(div1, "class", "list-container svelte-ooms3n");
			add_location(div1, file, 101, 0, 2057);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, a0);
			append_dev(a0, t0);
			append_dev(div0, t1);
			append_dev(div0, h1);
			append_dev(h1, t2);
			append_dev(div0, t3);
			append_dev(div0, hr0);
			append_dev(div0, t4);
			append_dev(div0, label0);
			append_dev(label0, t5);
			append_dev(label0, input0);
			set_input_value(input0, /*userEmail*/ ctx[0]);
			append_dev(div0, t6);
			append_dev(div0, hr1);
			append_dev(div0, t7);
			append_dev(div0, label1);
			append_dev(label1, t8);
			append_dev(label1, input1);
			set_input_value(input1, /*userPassword*/ ctx[1]);
			append_dev(div0, t9);
			append_dev(div0, hr2);
			append_dev(div0, t10);
			append_dev(div0, button);
			append_dev(button, t11);
			append_dev(div0, t12);
			append_dev(div0, hr3);
			append_dev(div0, t13);
			append_dev(div0, p);
			append_dev(p, t14);
			append_dev(p, a1);
			append_dev(a1, t15);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[3]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[4]),
					listen_dev(button, "click", /*userLogin*/ ctx[2], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*userEmail*/ 1 && input0.value !== /*userEmail*/ ctx[0]) {
				set_input_value(input0, /*userEmail*/ ctx[0]);
			}

			if (dirty & /*userPassword*/ 2 && input1.value !== /*userPassword*/ ctx[1]) {
				set_input_value(input1, /*userPassword*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function validateEmail(userEmail) {
	const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	return re.test(String(userEmail).toLowerCase());
}

function enter() {
	document.getElementById("emailInput").addEventListener("keyup", function (event) {
		if (event.keyCode === 13) {
			event.preventDefault();
			document.getElementById("loginButton").click();
		}
	});

	document.getElementById("passwordInput").addEventListener("keyup", function (event) {
		if (event.keyCode === 13) {
			event.preventDefault();
			document.getElementById("loginButton").click();
		}
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Login", slots, []);
	let userEmail = "";
	let userPassword = "";

	onMount(async () => {
		enter();
	});

	function userLogin() {
		if (!userEmail || userEmail === "" || !userPassword || userPassword === "" || !validateEmail(userEmail)) {
			swal("Error", "Please enter an email and password", "error");
		} else {
			loginUser(userEmail, userPassword);
		}
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Login> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		userEmail = this.value;
		$$invalidate(0, userEmail);
	}

	function input1_input_handler() {
		userPassword = this.value;
		$$invalidate(1, userPassword);
	}

	$$self.$capture_state = () => ({
		onMount,
		loginUser,
		userEmail,
		userPassword,
		validateEmail,
		userLogin,
		enter
	});

	$$self.$inject_state = $$props => {
		if ("userEmail" in $$props) $$invalidate(0, userEmail = $$props.userEmail);
		if ("userPassword" in $$props) $$invalidate(1, userPassword = $$props.userPassword);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [userEmail, userPassword, userLogin, input0_input_handler, input1_input_handler];
}

class Login extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Login",
			options,
			id: create_fragment.name
		});
	}
}

export default Login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uOGI5NGI2Y2YuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvbG9naW4uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XHJcbmltcG9ydCB7IG9uTW91bnQgfSBmcm9tIFwic3ZlbHRlXCI7XHJcbmltcG9ydCB7IGxvZ2luVXNlciB9IGZyb20gXCIuLi9zZXJ2aWNlcy91c2Vycy5zZXJ2aWNlXCI7XHJcblxyXG5sZXQgdXNlckVtYWlsID0gXCJcIjtcclxubGV0IHVzZXJQYXNzd29yZCA9IFwiXCI7XHJcblxyXG5vbk1vdW50KGFzeW5jICgpID0+IHtcclxuXHRlbnRlcigpO1xyXG59KTtcclxuXHJcbmZ1bmN0aW9uIHZhbGlkYXRlRW1haWwodXNlckVtYWlsKSB7XHJcbiAgY29uc3QgcmUgPSAvXigoW148PigpW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcXSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC87XHJcbiAgcmV0dXJuIHJlLnRlc3QoU3RyaW5nKHVzZXJFbWFpbCkudG9Mb3dlckNhc2UoKSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVzZXJMb2dpbigpIHtcclxuICBpZiAoXHJcbiAgICAhdXNlckVtYWlsIHx8XHJcbiAgICB1c2VyRW1haWwgPT09IFwiXCIgfHxcclxuICAgICF1c2VyUGFzc3dvcmQgfHxcclxuICAgIHVzZXJQYXNzd29yZCA9PT0gXCJcIiB8fFxyXG4gICAgIXZhbGlkYXRlRW1haWwodXNlckVtYWlsKVxyXG4gICkge1xyXG4gICAgc3dhbChcIkVycm9yXCIsIFwiUGxlYXNlIGVudGVyIGFuIGVtYWlsIGFuZCBwYXNzd29yZFwiLCBcImVycm9yXCIpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBsb2dpblVzZXIodXNlckVtYWlsLCB1c2VyUGFzc3dvcmQpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZW50ZXIoKXtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZW1haWxJbnB1dFwiKS5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdGlmIChldmVudC5rZXlDb2RlID09PSAxMykge1xyXG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9naW5CdXR0b25cIikuY2xpY2soKTtcclxuXHRcdH1cclxuXHR9KVxyXG5cclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBhc3N3b3JkSW5wdXRcIikuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMpIHtcclxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxvZ2luQnV0dG9uXCIpLmNsaWNrKCk7XHJcblx0XHR9XHJcblx0fSlcclxufVxyXG5cclxuPC9zY3JpcHQ+IFxyXG5cclxuXHJcbjxzdHlsZT5cclxuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TW9udHNlcnJhdDppdGFsLHdnaHRAMSw1MDAmZGlzcGxheT1zd2FwJyk7XHJcblxyXG4ubGlzdC1jb250YWluZXIge1xyXG5cdGhlaWdodDogMTAwdmg7XHJcblx0d2lkdGg6IDEwMHZ3O1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYigyMjcsIDIzMywgMjU1KTtcclxuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5saXN0LWNvbnRlbnQge1xyXG5cdHBhZGRpbmctdG9wOiA4dnc7XHJcblx0bWFyZ2luLXJpZ2h0OiBjYWxjKC03ZW0gKyA0MHZ3KTtcclxuXHRtYXJnaW4tbGVmdDogY2FsYygtOC41ZW0gKyA0MHZ3KTtcclxufVxyXG5cclxuLmhvbWUge1xyXG5cdGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblx0Zm9udC1zaXplOiBjYWxjKDAuNWVtICsgMC44dncpO1xyXG5cdGNvbG9yOiBibGFjaztcclxuXHR0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG5cclxuLnNpZ25VcExpbmsge1xyXG5cdGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblx0Y29sb3I6IHJnYigxNzUsIDEyNiwgMjM1KTtcclxufVxyXG5cclxuLndlbGNvbWUge1xyXG5cdG1hcmdpbi10b3A6IDFlbVxyXG59XHJcblxyXG4ubm9IciB7XHJcblx0b3BhY2l0eTogMDtcclxufVxyXG5cclxuLmVudGVyTG9nSW4ge1xyXG5cdGJhY2tncm91bmQtY29sb3I6IHJnYigxNzUsIDEyNiwgMjM1KTtcclxuXHRwYWRkaW5nOiAwLjVlbSA2ZW0gMC41ZW0gNmVtO1xyXG59XHJcblxyXG5oMSB7XHJcblx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxufVxyXG5cclxubGFiZWx7XHJcblx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG48L3N0eWxlPlxyXG5cclxuPGRpdiBjbGFzcz1cImxpc3QtY29udGFpbmVyXCI+XHJcblx0PGRpdiBjbGFzcz1cImxpc3QtY29udGVudFwiPlxyXG5cclxuXHRcdDxhIGNsYXNzPVwiaG9tZVwiIGhyZWY9XCIuXCI+UmFmaWtpJ3MgVG8gRG8gTGlzdDwvYT5cclxuXHRcdDxoMSBjbGFzcz1cIndlbGNvbWVcIj5XZWxjb21lIEJhY2s8L2gxPlxyXG5cclxuXHRcdDxocj5cclxuXHJcblx0XHQ8bGFiZWwgZm9yPVwibG9naW5FbWFpbFwiPkVtYWlsIEFkZHJlc3NcclxuXHRcdFx0PGlucHV0IGNsYXNzPVwiZm9ybS1jb250cm9sXCIgaWQ9XCJlbWFpbElucHV0XCIgdHlwZT1cImVtYWlsXCIgYmluZDp2YWx1ZT17dXNlckVtYWlsfSBuYW1lPVwibG9naW5FbWFpbFwiPlxyXG5cdFx0PC9sYWJlbD5cclxuXHJcblx0XHQ8aHIgY2xhc3M9XCJub0hyXCI+XHJcblxyXG5cdFx0PGxhYmVsIGZvcj1cImxvZ2luUGFzc3dvcmRcIj5QYXNzd29yZFxyXG5cdFx0XHQ8aW5wdXQgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBpZD1cInBhc3N3b3JkSW5wdXRcIiB0eXBlPVwicGFzc3dvcmRcIiBiaW5kOnZhbHVlPXt1c2VyUGFzc3dvcmR9IG5hbWU9XCJsb2dpblBhc3N3b3JkXCI+XHJcblx0XHQ8L2xhYmVsPlxyXG5cclxuXHRcdDxociBjbGFzcz1cIm5vSHJcIj5cclxuXHJcblx0XHQ8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBvbjpjbGljaz17dXNlckxvZ2lufSBpZD1cImxvZ2luQnV0dG9uXCIgY2xhc3M9XCJlbnRlckxvZ0luIGJ0biBidG4tZGFya1wiPkxvZ2luPC9idXR0b24+XHJcblxyXG5cdFx0PGhyPlxyXG5cclxuXHRcdDxwPkRvbid0IGhhdmUgYW4gYWNjb3VudD8gPGEgaHJlZj1cInNpZ25VcFwiIGNsYXNzPVwic2lnblVwTGlua1wiPlNpZ24gVXA8L2E+PC9wPlxyXG5cclxuXHQ8L2Rpdj5cclxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5Q0E4R3dFLEdBQVM7Ozs7Ozs7NENBTUgsR0FBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7OytDQUt4RCxHQUFTOzs7Ozs7O2lFQVg2QixHQUFTOzBDQUFULEdBQVM7Ozt1RUFNSCxHQUFZOzZDQUFaLEdBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1NBekdqRixhQUFhLENBQUMsU0FBUztPQUN4QixFQUFFLEdBQUcsdUpBQXVKO1FBQzNKLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxXQUFXOzs7U0FpQnJDLEtBQUs7Q0FDWixRQUFRLENBQUMsY0FBYyxDQUFDLFlBQVksRUFBRSxnQkFBZ0IsQ0FBQyxPQUFPLFlBQVcsS0FBSztNQUMxRSxLQUFLLENBQUMsT0FBTyxLQUFLLEVBQUU7R0FDeEIsS0FBSyxDQUFDLGNBQWM7R0FDcEIsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsS0FBSzs7OztDQUk3QyxRQUFRLENBQUMsY0FBYyxDQUFDLGVBQWUsRUFBRSxnQkFBZ0IsQ0FBQyxPQUFPLFlBQVcsS0FBSztNQUM1RSxLQUFLLENBQUMsT0FBTyxLQUFLLEVBQUU7R0FDeEIsS0FBSyxDQUFDLGNBQWM7R0FDcEIsUUFBUSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsS0FBSzs7Ozs7Ozs7S0FyQzFDLFNBQVMsR0FBRyxFQUFFO0tBQ2QsWUFBWSxHQUFHLEVBQUU7O0NBRXJCLE9BQU87RUFDTixLQUFLOzs7VUFRRyxTQUFTO09BRWIsU0FBUyxJQUNWLFNBQVMsS0FBSyxFQUFFLEtBQ2YsWUFBWSxJQUNiLFlBQVksS0FBSyxFQUFFLEtBQ2xCLGFBQWEsQ0FBQyxTQUFTO0dBRXhCLElBQUksQ0FBQyxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsT0FBTzs7R0FFM0QsU0FBUyxDQUFDLFNBQVMsRUFBRSxZQUFZOzs7Ozs7Ozs7OztFQW9GbUMsU0FBUzs7Ozs7RUFNSCxZQUFZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
