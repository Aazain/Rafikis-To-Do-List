import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as validate_slots, w as onMount, e as element, t as text, b as space, c as claim_element, f as children, j as claim_text, h as detach_dev, g as claim_space, k as attr_dev, l as add_location, n as insert_dev, o as append_dev, x as set_input_value, p as listen_dev, r as noop, y as run_all } from './client.194ab07c.js';
import { r as removeTodo, e as editTodo, g as getSingleItem } from './todo.service.c68207ea.js';
import './env.8f6a26c3.js';

/* src\routes\item\[id].svelte generated by Svelte v3.31.2 */
const file = "src\\routes\\item\\[id].svelte";

function create_fragment(ctx) {
	let div4;
	let div3;
	let h1;
	let a;
	let t0;
	let t1;
	let div2;
	let div0;
	let p0;
	let t2;
	let t3;
	let hr;
	let t4;
	let p1;
	let t5;
	let p2;
	let t6;
	let p3;
	let t7;
	let input;
	let t8;
	let div1;
	let button0;
	let t9;
	let t10;
	let button1;
	let t11;
	let t12;
	let button2;
	let t13;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div4 = element("div");
			div3 = element("div");
			h1 = element("h1");
			a = element("a");
			t0 = text("Return To List");
			t1 = space();
			div2 = element("div");
			div0 = element("div");
			p0 = element("p");
			t2 = text("Task Editor");
			t3 = space();
			hr = element("hr");
			t4 = space();
			p1 = element("p");
			t5 = space();
			p2 = element("p");
			t6 = space();
			p3 = element("p");
			t7 = space();
			input = element("input");
			t8 = space();
			div1 = element("div");
			button0 = element("button");
			t9 = text("Cancel");
			t10 = space();
			button1 = element("button");
			t11 = text("Save");
			t12 = space();
			button2 = element("button");
			t13 = text("Delete");
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			h1 = claim_element(div3_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			a = claim_element(h1_nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, "Return To List");
			a_nodes.forEach(detach_dev);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "Task Editor");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			hr = claim_element(div0_nodes, "HR", {});
			t4 = claim_space(div0_nodes);
			p1 = claim_element(div0_nodes, "P", { id: true, class: true });
			children(p1).forEach(detach_dev);
			t5 = claim_space(div0_nodes);
			p2 = claim_element(div0_nodes, "P", { id: true, class: true });
			children(p2).forEach(detach_dev);
			t6 = claim_space(div0_nodes);
			p3 = claim_element(div0_nodes, "P", { id: true, class: true });
			children(p3).forEach(detach_dev);
			t7 = claim_space(div0_nodes);
			input = claim_element(div0_nodes, "INPUT", { class: true, id: true, type: true });
			div0_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			button0 = claim_element(div1_nodes, "BUTTON", { class: true });
			var button0_nodes = children(button0);
			t9 = claim_text(button0_nodes, "Cancel");
			button0_nodes.forEach(detach_dev);
			t10 = claim_space(div1_nodes);
			button1 = claim_element(div1_nodes, "BUTTON", { class: true, id: true });
			var button1_nodes = children(button1);
			t11 = claim_text(button1_nodes, "Save");
			button1_nodes.forEach(detach_dev);
			t12 = claim_space(div1_nodes);
			button2 = claim_element(div1_nodes, "BUTTON", { class: true });
			var button2_nodes = children(button2);
			t13 = claim_text(button2_nodes, "Delete");
			button2_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "class", "returnToList svelte-6ot3ap");
			attr_dev(a, "href", "/list");
			add_location(a, file, 198, 26, 5098);
			attr_dev(h1, "class", "title svelte-6ot3ap");
			add_location(h1, file, 198, 8, 5080);
			attr_dev(p0, "class", "editorTitle svelte-6ot3ap");
			add_location(p0, file, 201, 16, 5268);
			add_location(hr, file, 202, 16, 5324);
			attr_dev(p1, "id", "item-createdAt");
			attr_dev(p1, "class", "svelte-6ot3ap");
			add_location(p1, file, 203, 16, 5346);
			attr_dev(p2, "id", "item-updatedAt");
			attr_dev(p2, "class", "svelte-6ot3ap");
			add_location(p2, file, 204, 16, 5391);
			attr_dev(p3, "id", "item-status");
			attr_dev(p3, "class", "svelte-6ot3ap");
			add_location(p3, file, 205, 16, 5436);
			attr_dev(input, "class", "editInput svelte-6ot3ap");
			attr_dev(input, "id", "editorText");
			attr_dev(input, "type", "text");
			add_location(input, file, 206, 16, 5529);
			attr_dev(div0, "class", "info svelte-6ot3ap");
			add_location(div0, file, 200, 14, 5232);
			attr_dev(button0, "class", "cancelEdit btn btn-dark svelte-6ot3ap");
			add_location(button0, file, 210, 16, 5691);
			attr_dev(button1, "class", "saveButton btn btn-dark svelte-6ot3ap");
			attr_dev(button1, "id", "saveChanges");
			add_location(button1, file, 211, 16, 5786);
			attr_dev(button2, "class", "deleteButton btn btn-danger svelte-6ot3ap");
			add_location(button2, file, 212, 16, 5913);
			attr_dev(div1, "class", "editingButtons svelte-6ot3ap");
			add_location(div1, file, 209, 14, 5645);
			attr_dev(div2, "class", "editArea svelte-6ot3ap");
			add_location(div2, file, 199, 12, 5194);
			attr_dev(div3, "class", "list-content svelte-6ot3ap");
			add_location(div3, file, 197, 4, 5044);
			attr_dev(div4, "class", "list-container svelte-6ot3ap");
			add_location(div4, file, 196, 0, 5010);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div3);
			append_dev(div3, h1);
			append_dev(h1, a);
			append_dev(a, t0);
			append_dev(div3, t1);
			append_dev(div3, div2);
			append_dev(div2, div0);
			append_dev(div0, p0);
			append_dev(p0, t2);
			append_dev(div0, t3);
			append_dev(div0, hr);
			append_dev(div0, t4);
			append_dev(div0, p1);
			append_dev(div0, t5);
			append_dev(div0, p2);
			append_dev(div0, t6);
			append_dev(div0, p3);
			append_dev(div0, t7);
			append_dev(div0, input);
			set_input_value(input, /*itemValue*/ ctx[0]);
			append_dev(div2, t8);
			append_dev(div2, div1);
			append_dev(div1, button0);
			append_dev(button0, t9);
			append_dev(div1, t10);
			append_dev(div1, button1);
			append_dev(button1, t11);
			append_dev(div1, t12);
			append_dev(div1, button2);
			append_dev(button2, t13);

			if (!mounted) {
				dispose = [
					listen_dev(a, "click", cancelEdit, false, false, false),
					listen_dev(p3, "click", /*click_handler*/ ctx[6], false, false, false),
					listen_dev(input, "input", /*input_input_handler*/ ctx[7]),
					listen_dev(button0, "click", cancelEdit, false, false, false),
					listen_dev(button1, "click", /*click_handler_1*/ ctx[8], false, false, false),
					listen_dev(button2, "click", /*click_handler_2*/ ctx[9], false, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*itemValue*/ 1 && input.value !== /*itemValue*/ ctx[0]) {
				set_input_value(input, /*itemValue*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function cancelEdit() {
	window.location.href = "/list";
}

function preload(params) {
	const path = params.pathname;
	const id = path.slice(6);
	return id;
}

function enter() {
	document.getElementById("editorText").addEventListener("keyup", function (event) {
		if (event.keyCode === 13) {
			event.preventDefault();
			document.getElementById("saveChanges").click();
		}
	});
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("U5Bidu5D", slots, []);
	let originalValue = "";
	let itemValue = "";
	let editorItemId = "";
	let itemStatus = "";

	onMount(async () => {
		getItem();
		enter();
	});

	function getItem() {
		let itemId = preload(window.location);

		getSingleItem(itemId).then(function (item) {
			if (item == undefined) {
				swal("Error", "Please Select a Task", "error").then(function () {
					window.location.href = "/list";
				});
			} else {
				$$invalidate(1, editorItemId = item._id);
				originalValue = item.name;
				$$invalidate(0, itemValue = item.name);
				itemStatus = item.status;
				let createdData = new Date(item.createdAt);
				let updatedData = new Date(item.updatedAt);

				let createdTime = createdData.toLocaleString("en-US", {
					month: "long",
					weekday: "long",
					day: "numeric",
					hour: "numeric",
					minute: "numeric",
					second: "numeric",
					year: "numeric",
					hour12: true
				});

				let updatedTime = updatedData.toLocaleString("en-US", {
					month: "long",
					weekday: "long",
					day: "numeric",
					hour: "numeric",
					minute: "numeric",
					second: "numeric",
					year: "numeric",
					hour12: true
				});

				document.getElementById("item-createdAt").innerHTML = "Created: " + createdTime;
				document.getElementById("item-updatedAt").innerHTML = "Updated: " + updatedTime;

				if (itemStatus == false || itemStatus == null) {
					document.getElementById("item-status").innerHTML = "Status: Incomplete";
				} else {
					document.getElementById("item-status").innerHTML = "Status: Completed";
				}
			}
		});
	}

	function removeFromList(id) {
		if (!id || id === "") {
			swal("Error", "Please enter a task", "error");
		} else {
			swal({
				title: "Are you sure?",
				text: "This Action Is Not Reversible",
				icon: "warning",
				buttons: true,
				dangerMode: true
			}).then(willDelete => {
				if (willDelete) {
					swal("Poof! Successfully Deleted Task", { icon: "success" }).then(removeTodo(id)).then(() => window.location.href = "/list");
				} else {
					swal("Task was not Deleted!", { icon: "error" });
				}
			});
		}

		
	}

	function editList(id) {
		if (!id || id === "") {
			swal("Error", "The edit field cannot be empty", "error");
		} else if (!itemValue || itemValue == "") {
			swal("Error", "The edit field cannot be empty", "error");
		} else if (itemValue == originalValue) {
			swal("Error", "No Changes Were Made", "error");
		} else {
			editTodo(id, itemValue).then(swal("Success", "Successfully Edited Task", "success").then(function () {
				window.location.href = "/list";
			}));
		}
	}

	function editStatus(id, name) {
		if (itemStatus == true) {
			itemStatus = false;
			document.getElementById("item-status").innerHTML = "Status: Incomplete";

			swal({
				title: "Item Status Changed To Incomplete",
				timer: 600,
				button: false
			});
		} else if (itemStatus == false || itemStatus == null) {
			itemStatus = true;
			document.getElementById("item-status").innerHTML = "Status: Complete";

			swal({
				title: "Item Status Changed To Completed",
				timer: 600,
				button: false
			});
		}

		editTodo(id, name, itemStatus);
	}

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Bidu5D> was created with unknown prop '${key}'`);
	});

	const click_handler = () => editStatus(editorItemId, itemValue);

	function input_input_handler() {
		itemValue = this.value;
		$$invalidate(0, itemValue);
	}

	const click_handler_1 = () => editList(editorItemId);
	const click_handler_2 = () => removeFromList(editorItemId);

	$$self.$capture_state = () => ({
		onMount,
		removeTodo,
		editTodo,
		getSingleItem,
		originalValue,
		itemValue,
		editorItemId,
		itemStatus,
		getItem,
		cancelEdit,
		preload,
		removeFromList,
		editList,
		editStatus,
		enter
	});

	$$self.$inject_state = $$props => {
		if ("originalValue" in $$props) originalValue = $$props.originalValue;
		if ("itemValue" in $$props) $$invalidate(0, itemValue = $$props.itemValue);
		if ("editorItemId" in $$props) $$invalidate(1, editorItemId = $$props.editorItemId);
		if ("itemStatus" in $$props) itemStatus = $$props.itemStatus;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		itemValue,
		editorItemId,
		removeFromList,
		editList,
		editStatus,
		preload,
		click_handler,
		input_input_handler,
		click_handler_1,
		click_handler_2
	];
}

class U5Bidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { preload: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Bidu5D",
			options,
			id: create_fragment.name
		});
	}

	get preload() {
		return preload;
	}

	set preload(value) {
		throw new Error("<U5Bidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Bidu5D;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
