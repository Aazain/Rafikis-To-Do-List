import { e as env } from './env.8f6a26c3.js';

function createNewUser(email, password) {
  fetch(`${env()}/users/signup`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
    },
    body: JSON.stringify({
      email,
      password,
    }),
  })
    .then((res) => {
      return res;
    })
    .catch((err) => console.log(err));
}

function loginUser(email, password) {
  fetch(`${env()}/users/login`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Accept": "application/json",
    },
    body: JSON.stringify({
      email,
      password,
    }),
  })
    .then((res) => res.json())
    .then((data) =>
      localStorage.setItem(
        "refreshToken",
        JSON.stringify(data.refreshToken),
        localStorage.setItem("accessToken", JSON.stringify(data.accessToken))
      )
    )
    .then(function (res) {
      if (
        localStorage.getItem("refreshToken") == "undefined" ||
        localStorage.getItem("accessToken") == "undefined"
      ) {
        swal("Error", "Incorrect Email or Password", "error");
      } else {
        loginSuccess();
      }
    })
    .catch((err) => console.log(err));
}

function loginSuccess() {
  window.location.href = "/list";
}

function logOutUser() {
  localStorage.setItem("refreshToken",JSON.stringify("undefined"),
    localStorage.setItem("accessToken", JSON.stringify("undefined")),
    window.location.href = "/"
  );
}

export { logOutUser as a, createNewUser as c, loginUser as l };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlcnMuc2VydmljZS4zODY2OTBiNi5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NlcnZpY2VzL3VzZXJzLnNlcnZpY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4uLy4uL2NvbmZpZy9lbnZcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdVc2VyKGVtYWlsLCBwYXNzd29yZCkge1xyXG4gIGZldGNoKGAke2VudigpfS91c2Vycy9zaWdudXBgLCB7XHJcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgXCJBY2NlcHRcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICB9LFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBlbWFpbCxcclxuICAgICAgcGFzc3dvcmQsXHJcbiAgICB9KSxcclxuICB9KVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICByZXR1cm4gcmVzO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmxvZyhlcnIpKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGxvZ2luVXNlcihlbWFpbCwgcGFzc3dvcmQpIHtcclxuICBmZXRjaChgJHtlbnYoKX0vdXNlcnMvbG9naW5gLCB7XHJcbiAgICBtZXRob2Q6IFwiUE9TVFwiLFxyXG4gICAgaGVhZGVyczoge1xyXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgXCJBY2NlcHRcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXHJcbiAgICB9LFxyXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICBlbWFpbCxcclxuICAgICAgcGFzc3dvcmQsXHJcbiAgICB9KSxcclxuICB9KVxyXG4gICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSlcclxuICAgIC50aGVuKChkYXRhKSA9PlxyXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcclxuICAgICAgICBcInJlZnJlc2hUb2tlblwiLFxyXG4gICAgICAgIEpTT04uc3RyaW5naWZ5KGRhdGEucmVmcmVzaFRva2VuKSxcclxuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImFjY2Vzc1Rva2VuXCIsIEpTT04uc3RyaW5naWZ5KGRhdGEuYWNjZXNzVG9rZW4pKVxyXG4gICAgICApXHJcbiAgICApXHJcbiAgICAudGhlbihmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInJlZnJlc2hUb2tlblwiKSA9PSBcInVuZGVmaW5lZFwiIHx8XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhY2Nlc3NUb2tlblwiKSA9PSBcInVuZGVmaW5lZFwiXHJcbiAgICAgICkge1xyXG4gICAgICAgIHN3YWwoXCJFcnJvclwiLCBcIkluY29ycmVjdCBFbWFpbCBvciBQYXNzd29yZFwiLCBcImVycm9yXCIpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxvZ2luU3VjY2VzcygpO1xyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2dpblN1Y2Nlc3MoKSB7XHJcbiAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBcIi9saXN0XCI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBsb2dPdXRVc2VyKCkge1xyXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicmVmcmVzaFRva2VuXCIsSlNPTi5zdHJpbmdpZnkoXCJ1bmRlZmluZWRcIiksXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImFjY2Vzc1Rva2VuXCIsIEpTT04uc3RyaW5naWZ5KFwidW5kZWZpbmVkXCIpKSxcclxuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gXCIvXCJcclxuICApO1xyXG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRU8sU0FBUyxhQUFhLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtBQUMvQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDLEVBQUU7QUFDakMsSUFBSSxNQUFNLEVBQUUsTUFBTTtBQUNsQixJQUFJLE9BQU8sRUFBRTtBQUNiLE1BQU0sY0FBYyxFQUFFLGtCQUFrQjtBQUN4QyxNQUFNLFFBQVEsRUFBRSxrQkFBa0I7QUFDbEMsS0FBSztBQUNMLElBQUksSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDekIsTUFBTSxLQUFLO0FBQ1gsTUFBTSxRQUFRO0FBQ2QsS0FBSyxDQUFDO0FBQ04sR0FBRyxDQUFDO0FBQ0osS0FBSyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUs7QUFDbkIsTUFBTSxPQUFPLEdBQUcsQ0FBQztBQUNqQixLQUFLLENBQUM7QUFDTixLQUFLLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDdEMsQ0FBQztBQUNEO0FBQ08sU0FBUyxTQUFTLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBRTtBQUMzQyxFQUFFLEtBQUssQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLEVBQUU7QUFDaEMsSUFBSSxNQUFNLEVBQUUsTUFBTTtBQUNsQixJQUFJLE9BQU8sRUFBRTtBQUNiLE1BQU0sY0FBYyxFQUFFLGtCQUFrQjtBQUN4QyxNQUFNLFFBQVEsRUFBRSxrQkFBa0I7QUFDbEMsS0FBSztBQUNMLElBQUksSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDekIsTUFBTSxLQUFLO0FBQ1gsTUFBTSxRQUFRO0FBQ2QsS0FBSyxDQUFDO0FBQ04sR0FBRyxDQUFDO0FBQ0osS0FBSyxJQUFJLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzlCLEtBQUssSUFBSSxDQUFDLENBQUMsSUFBSTtBQUNmLE1BQU0sWUFBWSxDQUFDLE9BQU87QUFDMUIsUUFBUSxjQUFjO0FBQ3RCLFFBQVEsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0FBQ3pDLFFBQVEsWUFBWSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDN0UsT0FBTztBQUNQLEtBQUs7QUFDTCxLQUFLLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRTtBQUN6QixNQUFNO0FBQ04sUUFBUSxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLFdBQVc7QUFDM0QsUUFBUSxZQUFZLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxJQUFJLFdBQVc7QUFDMUQsUUFBUTtBQUNSLFFBQVEsSUFBSSxDQUFDLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM5RCxPQUFPLE1BQU07QUFDYixRQUFRLFlBQVksRUFBRSxDQUFDO0FBQ3ZCLE9BQU87QUFDUCxLQUFLLENBQUM7QUFDTixLQUFLLEtBQUssQ0FBQyxDQUFDLEdBQUcsS0FBSyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDdEMsQ0FBQztBQUNEO0FBQ0EsU0FBUyxZQUFZLEdBQUc7QUFDeEIsRUFBRSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7QUFDakMsQ0FBQztBQUNEO0FBQ08sU0FBUyxVQUFVLEdBQUc7QUFDN0IsRUFBRSxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQztBQUNqRSxJQUFJLFlBQVksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDcEUsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxHQUFHO0FBQzlCLEdBQUcsQ0FBQztBQUNKOzs7OyJ9
